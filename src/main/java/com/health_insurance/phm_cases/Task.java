package com.health_insurance.phm_cases;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import org.kie.api.definition.type.Description;
import org.kie.api.definition.type.Label;

import java.io.Serializable;

/**
 * This class was automatically generated by the data modeler tool.
 */

@Label(value = "Task")
@Description(value = "Properties of a task.")
public class Task implements Serializable {

	private static final long serialVersionUID = -8860007291044844755L;

	@Label(value = "Task Id")
	@Description(value = "Numerical value identifying the task.")
	private Integer id;
	@Description(value = "Alphanumeric code of the task.")
	@Label(value = "Orig Task Id")
	private String origId;
	@Label(value = "Status")
	@Description(value = "The lifecycle status of the task.")
	private String status;
	@Label(value = "Task Suppression.")
	@Description(value = "Task inactive/suppression flag.")
	private Boolean taskSuppression;
	@Label(value = "Task Suppression Period")
	@Description(value = "Task inactive/suppression period.")
	private String taskSuppressionPeriod;
	@Label(value = "Close")
	@Description(value = "The type of task close.")
	private String close;
	@Description("The timer setting for the first reminder as an ISO 8601 value.")
	@Label(value = "Reminder Initiation")
	private String reminderInitiation;
	@Description("The frequency of the reminder as an ISO 8601 value.")
	@Label(value = "Reminder Frequency")
	private String reminderFrequency;
	@Description(value = "The timer setting for escalation as an ISO 8601 value.")
	@Label(value = "Escalation Timer")
	private String escalationTimer;

	/**
	 * The task.
	 */
	public Task() {
	}

	/**
	 * Return the numerical value identifying the task.
	 *
	 * @return the task id
	 */
	public Integer getId() {
		return this.id;
	}

	/**
	 * Set the numerical value identifying the task.
	 *
	 * @param id
	 */
	public void setId(Integer id) {
		this.id = id;
	}

	/**
	 * Return the alphanumeric code of the task.
	 *
	 * @return the original task id
	 */
	public String getOrigId() {
		return this.origId;
	}

	/**
	 * Set the alphanumeric code of the task.
	 *
	 * @param origId
	 */
	public void setOrigId(String origId) {
		this.origId = origId;
	}

	/**
	 * Return the lifecycle status of the task.
	 *
	 * @return the task status
	 */
	public String getStatus() {
		return status;
	}

	/**
	 * Set the lifecycle status of the task.
	 *
	 * @param status
	 */
	public void setStatus(String status) {
		this.status = status;
	}

	/**
	 * Return task inactive/suppression flag.
	 *
	 * @return task suppression flag
	 */
	public Boolean getTaskSuppression() {
		return taskSuppression;
	}

	/**
	 * Set task inactive/suppression flag.
	 *
	 * @param taskSuppression
	 */
	public void setTaskSuppression(Boolean taskSuppression) {
		this.taskSuppression = taskSuppression;
	}

	/**
	 * Return task inactive/suppression period.
	 *
	 * @return the task suppression period
	 */
	public String getTaskSuppressionPeriod() {
		return taskSuppressionPeriod;
	}

	/**
	 * Set task inactive/suppression period.
	 *
	 * @param taskSuppressionPeriod
	 */
	public void setTaskSuppressionPeriod(String taskSuppressionPeriod) {
		this.taskSuppressionPeriod = taskSuppressionPeriod;
	}

	/**
	 * Return the type of task close.
	 *
	 * @return the close flag
	 */
	public String getClose() {
		return close;
	}

	/**
	 * Set the type of task close.
	 *
	 * @param close
	 */
	public void setClose(String close) {
		this.close = close;
	}

	/**
	 * Return the timer setting for the first reminder as an ISO 8601 value.
	 *
	 * @return the reminder initiation timer setting.
	 */
	public String getReminderInitiation() {
		return reminderInitiation;
	}

	/**
	 * Set the timer setting for the first reminder as an ISO 8601 value.
	 *
	 * @param reminderInitiation
	 */
	public void setReminderInitiation(String reminderInitiation) {
		this.reminderInitiation = reminderInitiation;
	}

	/**
	 * Return the frequency of the reminder as an ISO 8601 value.
	 *
	 * @return the reminder frequency
	 */
	public String getReminderFrequency() {
		return this.reminderFrequency;
	}

	/**
	 * Set the frequency of the reminder as an ISO 8601 value.
	 *
	 * @param reminderFrequency
	 */
	public void setReminderFrequency(String reminderFrequency) {
		this.reminderFrequency = reminderFrequency;
	}

	/**
	 * Return the timer setting for escalation as an ISO 8601 value.
	 *
	 * @return the escalation timer setting
	 */
	public String getEscalationTimer() {
		return this.escalationTimer;
	}

	/**
	 * Set the timer setting for escalation as an ISO 8601 value.
	 *
	 * @param escalationTimer
	 */
	public void setEscalationTimer(String escalationTimer) {
		this.escalationTimer = escalationTimer;
	}

	/**
	 * The object as a JSON string.
	 *
	 * @return the object as a JSON string
	 */
	@Override
	public String toString() {
		final ObjectMapper objectMapper = new ObjectMapper();
		try {
			objectMapper.enable(SerializationFeature.INDENT_OUTPUT);
			return objectMapper.writeValueAsString(this);
		} catch (JsonProcessingException e) {
			e.printStackTrace();
		}
		return "";
	}

	/**
	 * The properties of a task.
	 *
	 * @param id
	 * @param origId
	 * @param status
	 * @param taskSuppression
	 * @param taskSuppressionPeriod
	 * @param close
	 * @param reminderInitiation
	 * @param reminderFrequency
	 * @param escalationTimer
	 */
	public Task(Integer id, String origId, String status, Boolean taskSuppression, String taskSuppressionPeriod, String close, String reminderInitiation, String reminderFrequency, String escalationTimer) {
		this.id = id;
		this.origId = origId;
		this.status = status;
		this.taskSuppression = taskSuppression;
		this.taskSuppressionPeriod = taskSuppressionPeriod;
		this.close = close;
		this.reminderInitiation = reminderInitiation;
		this.reminderFrequency = reminderFrequency;
		this.escalationTimer = escalationTimer;
	}

}