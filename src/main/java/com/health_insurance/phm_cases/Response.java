package com.health_insurance.phm_cases;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.SerializationFeature;
import org.kie.api.definition.type.Description;
import org.kie.api.definition.type.Label;

import java.io.Serializable;

/**
 * This class was automatically generated by the data modeler tool.
 */

@Label("Service Response")
@Description("Response from a REST API Call.")
public class Response implements Serializable {

	private static final long serialVersionUID = -7483068251987822005L;

	@Label(value = "Task")
	private Task task;
	@Label(value = "Task Actor Assignment")
	private TaskActorAssignment assignment;
	@Label(value = "Reminder")
	private com.health_insurance.phm_processes.Reminder reminder;

	/**
	 * Response from a REST API Call.
	 */
	public Response() {
	}

	public Task getTask() {
		return this.task;
	}

	public void setTask(
			Task task) {
		this.task = task;
	}

	public TaskActorAssignment getAssignment() {
		return this.assignment;
	}

	public void setAssignment(
			TaskActorAssignment assignment) {
		this.assignment = assignment;
	}

	public com.health_insurance.phm_processes.Reminder getReminder() {
		return this.reminder;
	}

	public void setReminder(com.health_insurance.phm_processes.Reminder reminder) {
		this.reminder = reminder;
	}

	/**
	 * The object as a JSON string.
	 *
	 * @return the object as a JSON string
	 */

	@Override
	public String toString() {
		final ObjectMapper objectMapper = new ObjectMapper();
		try {
			objectMapper.enable(SerializationFeature.INDENT_OUTPUT);
			return objectMapper.writeValueAsString(this);
		} catch (JsonProcessingException e) {
			e.printStackTrace();
		}
		return "";
	}

	/**
	 * Response from a REST API Call.
	 *
	 * @param task
	 * @param assignment
	 * @param reminder
	 */
    public Response(
    		Task task,
			TaskActorAssignment assignment,
			com.health_insurance.phm_processes.Reminder reminder) {
		this.task = task;
		this.assignment = assignment;
		this.reminder = reminder;
	}

}